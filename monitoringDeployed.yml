---
# monitoringDeployed.yml    
- name: Deploy Prometheus monitoring
  hosts: dockerhost  
  vars:
    prometheus_version: "v2.47.2"
    grafana_version: "10.2.3"

  tasks:
    - name: Ensure monitoring namespace exists
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring

    # 1. Deploy Node Exporter (Add this!)
    - name: Deploy Node Exporter (DaemonSet)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: DaemonSet
          metadata:
            name: node-exporter
            namespace: monitoring
            labels:
              app: node-exporter
          spec:
            selector:
              matchLabels:
                app: node-exporter
            template:
              metadata:
                labels:
                  app: node-exporter
              spec:
                containers:
                - name: node-exporter
                  image: prom/node-exporter:v1.6.1
                  ports:
                  - containerPort: 9100
                tolerations:
                - effect: NoSchedule
                  operator: Exists

    # 2. Create ConfigMaps (Your existing config)
    - name: Create Prometheus config
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: prometheus-config
            namespace: monitoring
          data:
            prometheus.yml: |
              global:
                scrape_interval: 15s
              scrape_configs:
              - job_name: 'myapp'
                static_configs:
                - targets: 
                  - 13.126.85.5:30802
                  - 13.201.42.241:30802
                metrics_path: '/api/metrics'
              - job_name: 'node-exporter'
                kubernetes_sd_configs:
                  - role: endpoints
                    namespaces:
                      names: [monitoring]
                relabel_configs:
                - source_labels: [__meta_kubernetes_service_name]
                  action: keep
                  regex: node-exporter

    # 3. Deploy Prometheus + Grafana (Your existing deployment)
    - name: Deploy Monitoring Stack
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: monitoring-stack
            namespace: monitoring
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: monitoring
            template:
              metadata:
                labels:
                  app: monitoring
              spec:
                containers:
                - name: prometheus
                  image: "prom/prometheus:{{ prometheus_version }}"
                  ports:
                  - containerPort: 9090
                  volumeMounts:
                  - name: config
                    mountPath: /etc/prometheus/prometheus.yml
                    subPath: prometheus.yml
                - name: grafana
                  image: "grafana/grafana:{{ grafana_version }}"
                  ports:
                  - containerPort: 3000
                  env:
                  - name: GF_SECURITY_ADMIN_USER
                    value: "admin"
                  - name: GF_SECURITY_ADMIN_PASSWORD
                    value: "admin"
                volumes:
                - name: config
                  configMap:
                    name: prometheus-config

    # 4. Expose Services (Your existing service)
    - name: Expose Monitoring Services
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: monitoring
            namespace: monitoring
          spec:
            type: NodePort
            selector:
              app: monitoring
            ports:
            - name: prometheus
              port: 9090
              targetPort: 9090
              nodePort: 30090
            - name: grafana
              port: 3000
              targetPort: 3000
              nodePort: 30300